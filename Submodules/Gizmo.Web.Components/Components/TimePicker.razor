@namespace Gizmo.Web.Components
@inherits GizInputBase<TValue>

@typeparam TValue

<CascadingValue Value="@this" IsFixed="true">

    <div class="@Class @ClassName"
         id="@Id"
         @ref="@Ref">
        <div class="giz-time-picker-input__content">
            <GizInput Label="@Label"
                      ValidationErrorStyle="@(ValidationErrorStyle == ValidationErrorStyles.Label ? ValidationErrorStyles.BorderOnly : ValidationErrorStyle)"
                      IsDisabled="@IsDisabled"
                      IsFullWidth="@IsFullWidth"
                      Width="@Width"
                      HasOutline="@HasOutline"
                      HasShadow="@HasShadow"
                      IsTransparent="@IsTransparent"
                      Size="@Size"
                      IsValid="@IsValid"
                      ValidationMessage="@ValidationMessage"
                      RightSVGIcon="Icons.Time2"
                      @onclick="OnClickInput">
                <div class="giz-input-wrapper">
                    <input id="@Id"
                           type="text"
                           value="@_text"
                           readonly="@IsReadOnly"
                           disabled="@IsDisabled"
                           @oninput="OnInputHandler"
                           @onclick="OnClickInput" />
                </div>
                
                @if (CanClearValue && IsNullable() && Value != null)
                {
                    <IconButton SVGIcon="@Icons.Close" Class="giz-input-button-clear" @onclick="OnClickButtonClearValueHandler" />
                }

            </GizInput>

            <Popup @bind-IsOpen="@IsOpen"
                   OpenDirection="@OpenDirection"
                   Class="@PopupClassName"
                   Style="@PopupStyleValue">
                <TimePickerBase @ref="_popupContent" TValue="TValue" Value="@Value" ValueChanged="@TimePickerValueChanged" IsFullWidth="@IsFullWidth" OnClickOK="@OnClickOKButtonHandler" OnClickCancel="@OnClickCancelButtonHandler" />
            </Popup>
        </div>
            
        @if (ValidationErrorStyle == ValidationErrorStyles.Label)
        {
            <div class="giz-input-validation-label">
                @ValidationMessage
            </div>
        }
    </div>

</CascadingValue>