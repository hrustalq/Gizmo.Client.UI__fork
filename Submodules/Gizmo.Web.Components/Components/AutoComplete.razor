@namespace Gizmo.Web.Components
@inherits GizInputBase<TValue>

@typeparam TItemType
@typeparam TValue

<CascadingValue Value="@((ISelect<TValue>)this)" IsFixed="true">
    <div class="@Class @ClassName"
         style="@Style"
         id="@Id"
         @ref="@Ref">
        <div class="giz-auto-complete__content" @ref="_inputElement">
            <GizInput Label="@Label"
                      ValidationErrorStyle="@(ValidationErrorStyle == ValidationErrorStyles.Label ? ValidationErrorStyles.BorderOnly : ValidationErrorStyle)"
                      IsDisabled="@IsDisabled"
                      IsFullWidth="@IsFullWidth"
                      Width="@Width"
                      HasOutline="@HasOutline"
                      HasShadow="@HasShadow"
                      IsTransparent="@IsTransparent"
                      Size="@Size"
                      IsValid="@_isValid"
                      ValidationMessage="@_validationMessage"
                      RightSVGIcon="Icons.Search">
                <div class="giz-input-wrapper">
                    <input @ref="_inputElement"
                           type="text"
                           value="@_text"
                           readonly="@IsReadOnly"
                           disabled="@IsDisabled"
                           @oninput="OnInputHandler"
                           @onkeydown="OnInputKeyDownHandler"
                           />
                </div>
            </GizInput>

            <Popup MaximumHeight="@MaximumHeight"
                   @bind-IsOpen="_isOpen"
                   OpenDirection="@OpenDirection"
                   Class="@PopupClassName"
                   Style="@PopupStyleValue">
                <List @ref="_popupContent"
                      CanClick="true"
                      CanSelect="true">
                    @if (_items != null)
                    {
                        @foreach (var item in GetFiltered(_text))
                        {
                            if (ItemTemplate != null)
                            {
                                @ItemTemplate(item);
                            }
                            else
                            {
                                <SelectItem TValue="TValue" Value="@GetItemValue(item)" Text="@GetItemText(item)" />
                            }
                        }
                    }
                </List>
            </Popup>
        </div>
            
        @if (ValidationErrorStyle == ValidationErrorStyles.Label)
        {
            <div class="giz-input-validation-label">
                @_validationMessage
            </div>
        }
    </div>
</CascadingValue>