@namespace Gizmo.Web.Components
@inherits GizInputBase<TValue>

@typeparam TValue

<div class="giz-time-picker">
    <div class="giz-time-picker__header">
        <span class="giz-time-picker__header__title">@(_hours.ToString().PadLeft(2, '0') ?? "00")</span>
        <div><span class="giz-time-picker__header__title">:</span></div>
        <span class="giz-time-picker__header__title">@(_minutes.ToString().PadLeft(2, '0') ?? "00")</span>
        <div class="giz-time-picker__header__ampm">
            <span class="giz-time-picker__header__label">@(_previewValue.HasValue ? _previewValue.Value.ToString("tt") : DateTime.Now.ToString("tt"))</span>
        </div>
    </div>
    <div class="giz-time-picker__content">
        <div class="giz-time-picker__content__timer">
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonIncreaseHourHandler" SVGIcon="Icons.ArrowUp"></IconButton>
            <TextInput IsFullWidth="true" HasOutline="false" HasShadow="false" Type="text" Value="@_hours.ToString()" Min="0" Max="59" MaxLength="2" />
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonDecreaseHourHandler" SVGIcon="Icons.ArrowDown"></IconButton>
        </div>
        <div>
            <span class="giz-time-picker__content__separator">:</span>
        </div>
        <div class="giz-time-picker__content__timer">
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonIncreaseMinuteHandler" SVGIcon="Icons.ArrowUp"></IconButton>
            <TextInput IsFullWidth="true" HasOutline="false" HasShadow="false" Type="text" Value="@_minutes.ToString()" Min="0" Max="59" MaxLength="2" />
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonDecreaseMinuteHandler" SVGIcon="Icons.ArrowDown"></IconButton>
        </div>
        <div class="giz-time-picker__content__timer">
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonSwitchAMPMHandler" SVGIcon="Icons.ArrowUp"></IconButton>
            <TextInput IsFullWidth="true" HasOutline="false" HasShadow="false" Type="text" Value="@(_previewValue.HasValue ? _previewValue.Value.ToString("tt") : DateTime.Now.ToString("tt"))" IsReadOnly="true" MaxLength="2" />
            <IconButton Variant="ButtonVariants.Text" @onclick="OnClickButtonSwitchAMPMHandler" SVGIcon="Icons.ArrowDown"></IconButton>
        </div>
    </div>
    <div class="giz-time-picker__footer">
        <div><Button @onclick="OnClickOKButtonHandler">OK</Button></div>
        <div><Button Variant="ButtonVariants.Outline" @onclick="OnClickCancelButtonHandler">CANCEL</Button></div>
    </div>
</div>