@namespace Gizmo.Web.Components
@inherits GizInputBase<List<TValue>>

@typeparam TValue

<CascadingValue Value="@((ISelect<TValue>)this)" IsFixed="true">
    <div class="@Class @ClassName"
         style="@Style"
         id="@Id"
         @ref="@Ref">         
        <div class="giz-multi-select__content_wrapper" @ref="_inputElement">
            <GizInput Label="@Label"
                      ValidationErrorStyle="@(ValidationErrorStyle == ValidationErrorStyles.Label ? ValidationErrorStyles.BorderOnly : ValidationErrorStyle)"
                      IsDisabled="@IsDisabled"
                      IsFullWidth="@IsFullWidth"
                      Width="@Width"
                      HasOutline="@HasOutline"
                      HasShadow="@HasShadow"
                      IsTransparent="@IsTransparent"
                      Size="@Size"
                      IsValid="@IsValid"
                      ValidationMessage="@ValidationMessage"
                      RightSVGIcon="@(HandleSVGIcon.HasValue ? HandleSVGIcon.Value : Icons.TriangleDown)"
                      @onclick="OnClickInput">

                <div class="giz-multi-select__content" tabindex="0" style="outline: none">
                    @GetSelectedItemsText()
                </div>

                @if (CanClearValue && Value != null && Value.Count > 0)
                {
                    <IconButton SVGIcon="@Icons.Close" Class="giz-input-button-clear" @onclick="OnClickButtonClearValueHandler" />
                }
            </GizInput>

            <Popup MaximumHeight="@MaximumHeight"
                   @bind-IsOpen="_isOpen"
                   OpenDirection="@OpenDirection"
                   Class="@PopupClassName"
                   Style="@PopupStyleValue">
                <div class="giz-multi-select-list" @ref="_popupContent">
                    @ChildContent
                </div>
            </Popup>
        </div>
            
        @if (ValidationErrorStyle == ValidationErrorStyles.Label)
        {
            <div class="giz-input-validation-label">
                @ValidationMessage
            </div>
        }
    </div>
</CascadingValue>
