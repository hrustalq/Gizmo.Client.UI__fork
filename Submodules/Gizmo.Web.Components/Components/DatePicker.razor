@namespace Gizmo.Web.Components
@inherits GizInputBase<TValue>

@typeparam TValue

<CascadingValue Value="@this" IsFixed="true">

    @if (Variant != PickerVariants.Static)
    {
        <div class="@Class @ClassName"
             id="@Id"
             @ref="@Ref">
            <div class="giz-date-picker-input__content">
                <GizInput Label="@Label"
                          ValidationErrorStyle="@(ValidationErrorStyle == ValidationErrorStyles.Label ? ValidationErrorStyles.BorderOnly : ValidationErrorStyle)"
                          IsDisabled="@IsDisabled"
                          IsFullWidth="@IsFullWidth"
                          Width="@Width"
                          HasOutline="@HasOutline"
                          HasShadow="@HasShadow"
                          IsTransparent="@IsTransparent"
                          Size="@Size"
                          IsValid="@IsValid"
                          ValidationMessage="@ValidationMessage"
                          RightSVGIcon="Icons.Calendar"
                          @onclick="OnClickInput">
                    <div class="giz-input-wrapper">
                        <input type="text"
                               value="@_text"
                               readonly="@IsReadOnly"
                               disabled="@IsDisabled"
                               @oninput="OnInputHandler"
                               @onclick="OnClickInput" />
                    </div>

                    @if (CanClearValue && IsNullable() && Value != null)
                    {
                        <IconButton SVGIcon="@Icons.Close" Class="giz-input-button-clear" @onclick="OnClickButtonClearValueHandler" />
                    }
                </GizInput>

                <Popup @bind-IsOpen="_isOpen"
                       OpenDirection="@(Variant != PickerVariants.Inline ? PopupOpenDirections.None : OpenDirection)"
                       Class="@PopupClassName"
                       Style="@PopupStyleValue">
                    <DatePickerBase @ref="_popupContent" TValue="TValue" Value="@Value" ValueChanged="@DatePickerValueChanged" IsFullWidth="@IsFullWidth" ShowTime="@ShowTime" Culture="@Culture" Format="@Format" />
                </Popup>
            </div>
            
            @if (ValidationErrorStyle == ValidationErrorStyles.Label)
            {
                <div class="giz-input-validation-label">
                    @ValidationMessage
                </div>
            }
        </div>
    }
    else
    {
        <DatePickerBase TValue="TValue" @bind-Value="Value" IsFullWidth="@IsFullWidth" Culture="@Culture" Format="@Format" />
    }

</CascadingValue>